<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ConsoleFx.CmdLine.Parser</name>
    </assembly>
    <members>
        <member name="T:ConsoleFx.CmdLine.Parser.Messages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.InvalidNumberOfArguments">
            <summary>
              Looks up a localized string similar to Invalid number of arguments specified.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.InvalidOptionParameterSpecifier">
            <summary>
              Looks up a localized string similar to Option &quot;{0}&quot; should be followed by a colon (:) to specify its parameters.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.InvalidOptionParametersSpecified">
            <summary>
              Looks up a localized string similar to Invalid parameter format for option &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.InvalidOptionSpecified">
            <summary>
              Looks up a localized string similar to Invalid option was specified: &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.InvalidParametersSpecified">
            <summary>
              Looks up a localized string similar to Invalid parameters specified for option &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.OccurenceParameterValueNegative">
            <summary>
              Looks up a localized string similar to Occurence/parameter values cannot be negative.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.OptionAlreadyExists">
            <summary>
              Looks up a localized string similar to An option by the name &apos;{0}&apos; already exists.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.OptionsAfterParameters">
            <summary>
              Looks up a localized string similar to The options should be specified after the arguments.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.OptionsBeforeParameters">
            <summary>
              Looks up a localized string similar to The options should be specified before the arguments.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.RequiredArgumentsDefinedAfterOptional">
            <summary>
              Looks up a localized string similar to Cannot specify required arguments after optional ones.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.RequiredOptionAbsent">
            <summary>
              Looks up a localized string similar to The option &quot;{0}&quot; should be specified.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.RequiredParametersAbsent">
            <summary>
              Looks up a localized string similar to Required parameters absent for option &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.TooFewOptions">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; option should be specified at least {1} times..
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Messages.TooManyOptions">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; option cannot be specified more than {1} times..
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Parser.Command">
            <summary>
                Gets the <see cref="P:ConsoleFx.CmdLine.Parser.Parser.Command"/> instance that specifies the parsing details and rules.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Parser.Grouping">
            <summary>
                Gets or sets how the args should be grouped.
                <para/>
                Note: This can be overridden by the parser style at runtime.
            </summary>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Parser.Parse(System.String[])">
            <summary>
                Parses the given set of tokens based on the rules specified by the <see cref="P:ConsoleFx.CmdLine.Parser.Parser.Command"/>.
            </summary>
            <param name="tokens">Token strings to parse.</param>
            <returns>A <see cref="T:ConsoleFx.CmdLine.Parser.ParseResult" /> instance.</returns>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Parser.Parse(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Parses the given set of tokens based on the rules specified by the <see cref="P:ConsoleFx.CmdLine.Parser.Parser.Command"/>.
            </summary>
            <param name="tokens">Token strings to parse.</param>
            <returns>A <see cref="T:ConsoleFx.CmdLine.Parser.ParseResult" /> instance.</returns>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Parser.GetMatchingGroups(ConsoleFx.CmdLine.Parser.Runs.ParseRun,System.Collections.Generic.IList{System.String})">
            <summary>
                Figure out the groups that match the specified options and arguments.
                <para/>
                Only arguments and options that have those groups will be considered for further
                processing.
            </summary>
            <param name="run">
                The <see cref="T:ConsoleFx.CmdLine.Parser.Runs.ParseRun"/> instance that contains the specified options.
            </param>
            <param name="specifiedArguments">The specified arguments.</param>
            <exception cref="T:ConsoleFx.CmdLine.ParserException">
                Thrown if args from different groups are specified.
            </exception>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Parser.ProcessOptions(System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLine.Parser.Runs.OptionRun})">
            <summary>
                Process the specified options by verifying their usage, validating them and executing
                their handler.
            </summary>
            <param name="optionRuns">The option run details.</param>
            <exception cref="T:ConsoleFx.CmdLine.ParserException">
                Thrown if any of the validation or usage checks on the <see cref="T:ConsoleFx.CmdLine.Parser.Runs.OptionRun"/> objects
                fails.
            </exception>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Parser.ResolveOptionParameterValues(ConsoleFx.CmdLine.Parser.Runs.OptionRun)">
            <summary>
                Resolves an <see cref="T:ConsoleFx.CmdLine.Option" />'s value based on it's usage details. See the
                <see cref="M:ConsoleFx.CmdLine.Option.GetOptionValueType" /> method for details on how the
                resolution is done.
            </summary>
            <param name="optionRun">The <see cref="T:ConsoleFx.CmdLine.Parser.Runs.OptionRun" /> instance, whose option to resolve.</param>
            <returns>The value of the option.</returns>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Parser.ProcessArguments(System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLine.Parser.Runs.ArgumentRun})">
            <summary>
                Process the specified arguments by verifying their usage, validating them and executing
                their handlers.
            </summary>
            <param name="specifiedArguments">The list of specified arguments.</param>
            <param name="argumentRuns">The argument run details.</param>
            <exception cref="T:ConsoleFx.CmdLine.ParserException">
                Thrown if any of the validation or usage checks on the <see cref="T:ConsoleFx.CmdLine.Parser.Runs.ArgumentRun"/> objects
                fails.
            </exception>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Parser.Tokenize(System.String)">
            <summary>
                Tokenizes the specified <paramref name="str"/> with space separators and &quot; delimiters.
            </summary>
            <param name="str">The string to tokenize.</param>
            <returns>The sequence of tokens.</returns>
        </member>
        <member name="T:ConsoleFx.CmdLine.Parser.ParseResult">
            <summary>
                Represents the results of parsing a set of arguments.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Runs.ArgumentOrOptionRun`1.Type">
            <summary>
                Gets the resolved type of the arg.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Runs.ArgumentOrOptionRun`1.Value">
            <summary>
                Gets or sets the resolved value of the arg.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Runs.ArgumentOrOptionRun`1.Assigned">
            <summary>
                Gets or sets a value indicating whether the <see cref="P:ConsoleFx.CmdLine.Parser.Runs.ArgumentOrOptionRun`1.Value"/> property is assigned.
            </summary>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Runs.ArgumentOrOptionRun`1.ResolveValue(System.String)">
            <summary>
                Helper method to resolve the raw string value of the arg using the formatter and type
                converter.
            </summary>
            <param name="rawValue">The raw string value assigned to the arg.</param>
            <returns>The resolved value after applying formatter and type converter.</returns>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Runs.ArgumentOrOptionRun`1.CreateCollection(System.Int32)">
            <summary>
                Helper method to create an <see cref="T:System.Collections.Generic.IList`1"/> object from the arg's type details
                using reflection.
            </summary>
            <param name="capacity">The initial capacity of the list.</param>
            <returns>The created <see cref="T:System.Collections.Generic.IList`1"/> instance.</returns>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Runs.OptionRun.Occurrences">
            <summary>
                Gets or sets the number of occurences of the option.
            </summary>
        </member>
        <member name="T:ConsoleFx.CmdLine.Parser.Runs.ParseRun">
            <summary>
                Represents the internal state of a single parse execution. This includes the commands,
                arguments and options that were specified.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Runs.ParseRun.Commands">
            <summary>
                Gets all specified commands.
                <para />
                Note: We use a <see cref="T:System.Collections.Generic.List`1" /> instead of the <see cref="P:ConsoleFx.CmdLine.Parser.Runs.ParseRun.Commands"/> collection
                here, because we want to avoid the duplicate checks, as commands at different levels
                can have the same name.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Runs.ParseRun.Arguments">
            <summary>
                Gets all allowed arguments and their values.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Runs.ParseRun.Options">
            <summary>
                Gets all allowed options and details of which are specified.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLine.Parser.Runs.ParseRun.Tokens">
            <summary>
                Gets or sets all the specified options and argument tokens after accounting for the
                commands.
            </summary>
        </member>
        <member name="T:ConsoleFx.CmdLine.Parser.Style.ArgStyle">
            <summary>
                Base class that defines the style of the arguments being parsed.
            </summary>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Style.ArgStyle.GetGrouping(ConsoleFx.CmdLine.ArgGrouping,System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLine.Option},System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLine.Argument})">
            <summary>
                Allows the parser style to override the preferred grouping based on its rules for the
                specified options and arguments.
            </summary>
            <param name="specifiedGrouping">The preferred grouping.</param>
            <param name="options">The list of allowed options.</param>
            <param name="arguments">The list of allowed arguments.</param>
            <returns>The final grouping for the specified options and arguments.</returns>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Style.ArgStyle.ValidateDefinedOptions(System.Collections.Generic.IEnumerable{ConsoleFx.CmdLine.Option})">
            <summary>
                Validate that the defined options are compatible with the parser style.
                <para/>
                An exception should be thrown if any option is invalid.
                <para/>
                An example of an invalid option is a short name longer than one character for the UNIX style parser.
            </summary>
            <param name="options">List of all the defined options.</param>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Style.ArgStyle.IdentifyTokens(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLine.Parser.Runs.OptionRun},ConsoleFx.CmdLine.ArgGrouping)">
            <summary>
                Identifies all provided tokens as arguments, options and option parameters.
                <para/>
                Option and argument validators are not checked in this phase. Only the arg grouping
                is checked.
            </summary>
            <param name="tokens">All the specified tokens.</param>
            <param name="options">
                All available options. If any of the tokens match, add its details to this parameter.
            </param>
            <param name="grouping">The expected arg grouping to validate.</param>
            <returns>A collection of all the identified arguments.</returns>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Style.ArgStyle.GetDefaultHelpOptionNames">
            <summary>
                Returns the default names for the help options.
            </summary>
            <returns>A sequence of help option names.</returns>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Style.UnixArgStyle.GetGrouping(ConsoleFx.CmdLine.ArgGrouping,System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLine.Option},System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLine.Argument})">
            <inheritdoc/>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Style.UnixArgStyle.IdentifyTokens(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLine.Parser.Runs.OptionRun},ConsoleFx.CmdLine.ArgGrouping)">
            <inheritdoc/>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Style.UnixArgStyle.GetDefaultHelpOptionNames">
            <inheritdoc/>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Style.WindowsArgStyle.IdentifyTokens(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLine.Parser.Runs.OptionRun},ConsoleFx.CmdLine.ArgGrouping)">
            <inheritdoc/>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Style.WindowsArgStyle.VerifyCommandLineGrouping(ConsoleFx.CmdLine.Parser.Style.WindowsArgStyle.ArgumentType,ConsoleFx.CmdLine.Parser.Style.WindowsArgStyle.ArgumentType,ConsoleFx.CmdLine.ArgGrouping)">
            <summary>
                This method is used by the code that validates the command-line grouping. It is
                called for every iteration of the arguments.
            </summary>
            <param name="previousType">The type of the previously-checked argument.</param>
            <param name="currentType">The type of the currently-checked argument.</param>
            <param name="grouping">The expected arg grouping.</param>
        </member>
        <member name="M:ConsoleFx.CmdLine.Parser.Style.WindowsArgStyle.GetDefaultHelpOptionNames">
            <inheritdoc/>
        </member>
    </members>
</doc>
