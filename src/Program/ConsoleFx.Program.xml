<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ConsoleFx.Program</name>
    </assembly>
    <members>
        <member name="T:ConsoleFx.Program.ConsoleProgram">
            <summary>
                Represents a console program.
            </summary>
        </member>
        <member name="M:ConsoleFx.Program.ConsoleProgram.#ctor(ConsoleFx.Program.ArgStyle,ConsoleFx.CmdLineArgs.ArgGrouping)">
            <summary>
                Initializes a new instance of the <see cref="T:ConsoleFx.Program.ConsoleProgram"/> class with the specified
                arg style and grouping.
            </summary>
            <param name="argStyle">The expected argument style.</param>
            <param name="grouping">The expected arg grouping.</param>
        </member>
        <member name="P:ConsoleFx.Program.ConsoleProgram.Grouping">
            <summary>
                Gets the expected grouping of the args.
            </summary>
        </member>
        <member name="M:ConsoleFx.Program.ConsoleProgram.Run(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Runs the console program after parsing the command-line args.
            </summary>
            <param name="args">The args to parse.</param>
            <returns>The numeric code that represents the result of the console program execution.</returns>
        </member>
        <member name="T:ConsoleFx.Program.HelpBuilders.UsageType">
            <summary>
                Describes how the program usage is to be displayed.
            </summary>
        </member>
        <member name="F:ConsoleFx.Program.HelpBuilders.UsageType.Summary">
            <summary>
                The program usage is to be displayed as a summary, showing just the existence of
                subcommands, arguments and options, but not mentioning them in detail.
            </summary>
        </member>
        <member name="F:ConsoleFx.Program.HelpBuilders.UsageType.Detailed">
            <summary>
                The program usage is to be displayed in detail, with every argument and option
                combinations mentioned.
            </summary>
        </member>
        <member name="M:ConsoleFx.Program.HelpCommand.GetArgs">
            <inheritdoc />
        </member>
        <member name="M:ConsoleFx.Program.HelpCommand.PerformCustomValidation(System.Collections.Generic.IReadOnlyList{System.Object},System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <inheritdoc />
        </member>
        <member name="M:ConsoleFx.Program.HelpCommand.HandleCommand">
            <inheritdoc />
        </member>
        <member name="T:ConsoleFx.Program.Messages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ConsoleFx.Program.Messages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ConsoleFx.Program.Messages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ConsoleFx.Program.Messages.InternalError">
             <summary>
               Looks up a localized string similar to An internal error has occurred with the following message:
                {0}
            Please contact the developer or your administrator for assistance..
             </summary>
        </member>
        <member name="T:ConsoleFx.Program.ProgramCommand">
            <summary>
                Represents a <see cref="T:ConsoleFx.CmdLineArgs.Command"/> that contains a <see cref="P:ConsoleFx.Program.ProgramCommand.Handler"/> to execute
                code if the command matches the command-line args.
            </summary>
        </member>
        <member name="M:ConsoleFx.Program.ProgramCommand.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:ConsoleFx.Program.ProgramCommand"/> class.
            </summary>
        </member>
        <member name="M:ConsoleFx.Program.ProgramCommand.#ctor(System.String[])">
            <summary>
                Initializes a new instance of the <see cref="T:ConsoleFx.Program.ProgramCommand"/> class with the specified
                <paramref name="names"/>.
            </summary>
            <param name="names">The names of the command.</param>
        </member>
        <member name="M:ConsoleFx.Program.ProgramCommand.#ctor(System.Boolean,System.String[])">
            <summary>
                Initializes a new instance of the <see cref="T:ConsoleFx.Program.ProgramCommand"/> class with the specified
                <paramref name="names"/> and case-sensitivity.
            </summary>
            <param name="caseSensitive">Indicates whether the names are case-sensitive.</param>
            <param name="names">The names of the command.</param>
        </member>
        <member name="P:ConsoleFx.Program.ProgramCommand.ParseResult">
            <summary>
                Gets the result of parsing the args of this command.
            </summary>
            <remarks>
                Note: This property will only be available to the <see cref="M:ConsoleFx.Program.ProgramCommand.HandleCommand"/> virtual
                method, which is called after the args have been parsed.
            </remarks>
        </member>
        <member name="P:ConsoleFx.Program.ProgramCommand.Handler">
            <summary>
                Gets or sets the delegate to call if the parsed args match this command.
                <para/>
                If not assigned, the virtual <see cref="M:ConsoleFx.Program.ProgramCommand.HandleCommand"/> method is called.
            </summary>
        </member>
    </members>
</doc>
