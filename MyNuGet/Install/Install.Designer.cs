//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyNuGet.Install {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Install {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Install() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MyNuGet.Install.Install", typeof(Install).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, the destination directory will contain only the package name, not the version number.
        /// </summary>
        internal static string ExcludeVersion {
            get {
                return ResourceManager.GetString("ExcludeVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (v2.5) The action to take, when asked to overwrite or ignore existing files referenced by the project: Overwrite, Ignore, None..
        /// </summary>
        internal static string FileConflictAction {
            get {
                return ResourceManager.GetString("FileConflictAction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable looking up packages from local machine cache..
        /// </summary>
        internal static string NoCache {
            get {
                return ResourceManager.GetString("NoCache", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do not prompt for user input or confirmations..
        /// </summary>
        internal static string NonInteractive {
            get {
                return ResourceManager.GetString("NonInteractive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the directory in which packages will be installed. If none specified, uses the current directory..
        /// </summary>
        internal static string OutputDirectory {
            get {
                return ResourceManager.GetString("OutputDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows prerelease packages to be installed. This flag is not required when restoring packages by installing from packages.config..
        /// </summary>
        internal static string Prerelease {
            get {
                return ResourceManager.GetString("Prerelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checks if package restore consent is granted before installing a package..
        /// </summary>
        internal static string RequireConsent {
            get {
                return ResourceManager.GetString("RequireConsent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Solution root for package restore..
        /// </summary>
        internal static string SolutionDirectory {
            get {
                return ResourceManager.GetString("SolutionDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A list of packages sources to use for the install..
        /// </summary>
        internal static string Source {
            get {
                return ResourceManager.GetString("Source", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display this amount of details in the output: normal, quiet, (v2.5) detailed..
        /// </summary>
        internal static string Verbosity {
            get {
                return ResourceManager.GetString("Verbosity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the package to install..
        /// </summary>
        internal static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
    }
}
