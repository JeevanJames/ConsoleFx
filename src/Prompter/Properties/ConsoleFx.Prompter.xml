<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ConsoleFx.Prompter</name>
    </assembly>
    <members>
        <member name="T:ConsoleFx.Prompter.Answers">
            <summary>
                Represents a dictionary of the answered values.
            </summary>
        </member>
        <member name="T:ConsoleFx.Prompter.AnswersFunc`1">
            <summary>
                Delegate that returns a value based on the <paramref name="answers"/> already provided
                to earlier questions.
            </summary>
            <typeparam name="TResult">The type of the returned value.</typeparam>
            <param name="answers">The answers already provided to earlier questions.</param>
        </member>
        <member name="T:ConsoleFx.Prompter.DisplayItem">
            <summary>
                Base class for any item that can be displayed by the prompter.
                <para/>
                This includes questions (<see cref="T:ConsoleFx.Prompter.Question"/>) and static text (<see cref="T:ConsoleFx.Prompter.StaticText"/>).
            </summary>
        </member>
        <member name="M:ConsoleFx.Prompter.DisplayItem.#ctor(ConsoleFx.Prompter.FunctionOrColorString)">
            <summary>
                Initializes a new instance of the <see cref="T:ConsoleFx.Prompter.DisplayItem"/> class.
            </summary>
            <param name="message">The <paramref name="message"/> to display to the user.</param>
        </member>
        <member name="P:ConsoleFx.Prompter.DisplayItem.AskerFn">
            <summary>
                Gets the delegate to call to display the prompt.
                <para/>
                Derived implementations must override this property to provide the behavior of displaying
                the prompt item, and if needed, the behaviors to get an answer.
            </summary>
        </member>
        <member name="T:ConsoleFx.Prompter.FunctionOrValue`1">
            <summary>
                Represents a fixed value or a factory function that can generate the value.
            </summary>
            <typeparam name="TValue">The type of the value.</typeparam>
        </member>
        <member name="M:ConsoleFx.Prompter.FunctionOrValue`1.#ctor(`0)">
            <summary>
                Initializes a new instance of the <see cref="T:ConsoleFx.Prompter.FunctionOrValue`1"/> struct with
                a fixed <paramref name="value"/>.
            </summary>
            <param name="value">The fixed value to set.</param>
        </member>
        <member name="M:ConsoleFx.Prompter.FunctionOrValue`1.#ctor(System.Func{System.Object,`0})">
            <summary>
                Initializes a new instance of the <see cref="T:ConsoleFx.Prompter.FunctionOrValue`1"/> struct with
                a factory <paramref name="function"/>.
            </summary>
            <param name="function">The factory function.</param>
        </member>
        <member name="P:ConsoleFx.Prompter.FunctionOrValue`1.Value">
            <summary>
                Gets the fixed value.
            </summary>
        </member>
        <member name="P:ConsoleFx.Prompter.FunctionOrValue`1.Function">
            <summary>
                Gets the factory function to generate the value.
            </summary>
        </member>
        <member name="P:ConsoleFx.Prompter.FunctionOrValue`1.IsAssigned">
            <summary>
                Gets a value indicating whether the <see cref="T:ConsoleFx.Prompter.FunctionOrValue`1"/> is assigned
                a value, i.e. whether its constructor was called.
            </summary>
        </member>
        <member name="M:ConsoleFx.Prompter.FunctionOrValue`1.Resolve(System.Object)">
            <summary>
                Resolves the value of the <see cref="T:ConsoleFx.Prompter.FunctionOrValue`1"/> by either returning
                the fixed value or executing the factory function and returning a dynamic value.
            </summary>
            <param name="answers">The set of answers passed to the factory function.</param>
            <returns>The resolved value of the <see cref="T:ConsoleFx.Prompter.FunctionOrValue`1"/>.</returns>
        </member>
        <member name="M:ConsoleFx.Prompter.FunctionOrValue`1.op_Implicit(`0)~ConsoleFx.Prompter.FunctionOrValue{`0}">
            <summary>
                Implicitly converts a fixed value to a <see cref="T:ConsoleFx.Prompter.FunctionOrValue`1"/> struct.
            </summary>
            <param name="value">The fixed value to convert.</param>
        </member>
        <member name="M:ConsoleFx.Prompter.FunctionOrValue`1.op_Implicit(System.Func{System.Object,`0})~ConsoleFx.Prompter.FunctionOrValue{`0}">
            <summary>
                Implicitly converts a factory function delegate to a <see cref="T:ConsoleFx.Prompter.FunctionOrValue`1"/>
                struct.
            </summary>
            <param name="function">The factory function delegate to convert.</param>
        </member>
        <member name="T:ConsoleFx.Prompter.PromptItem">
            <summary>
                Base class for any item that can be added to the <see cref="T:ConsoleFx.Prompter.PrompterFlow"/> collection.
            </summary>
        </member>
        <member name="M:ConsoleFx.Prompter.PromptItem.When(ConsoleFx.Prompter.AnswersFunc{System.Boolean})">
            <summary>
                Sets a delegate that controls whether this item can be processed or asked (if it is
                a <see cref="T:ConsoleFx.Prompter.Question"/>).
            </summary>
            <param name="canAskFn">The delegate to set.</param>
            <returns>The same <see cref="T:ConsoleFx.Prompter.PromptItem"/> instance.</returns>
        </member>
        <member name="P:ConsoleFx.Prompter.PromptItem.CanAskFn">
            <summary>
                Gets or sets a delegate indicating whether the <see cref="T:ConsoleFx.Prompter.PromptItem"/> can be asked
                or processed.
            </summary>
        </member>
        <member name="M:ConsoleFx.Prompter.PromptItem.CanAsk(System.Object)">
            <summary>
                Helper method to check whether this item can be processed or asked based on the <see cref="P:ConsoleFx.Prompter.PromptItem.CanAskFn"/>
                delegate.
            </summary>
            <param name="answers">The answers already provided to earlier questions.</param>
            <returns><c>True</c> if this item can be processed or asked.</returns>
        </member>
        <member name="M:ConsoleFx.Prompter.Question.#ctor(System.String,ConsoleFx.Prompter.FunctionOrColorString)">
            <summary>
                Initializes a new instance of the <see cref="T:ConsoleFx.Prompter.Question"/> class.
            </summary>
            <param name="name">The name of the variable to store the answer.</param>
            <param name="message">The message to display to the user.</param>
        </member>
        <member name="P:ConsoleFx.Prompter.Question.Name">
            <summary>
                Gets the name of the variable to store the answer.
            </summary>
        </member>
        <member name="T:ConsoleFx.Prompter.AsyncUpdateFlowItem">
            <summary>
                Allows questions and answers to be dynamically added, removed or modified at any point
                during the prompter flow.
            </summary>
        </member>
        <member name="M:ConsoleFx.Prompter.AddQuestionAction.Handle(ConsoleFx.Prompter.PrompterFlow,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ConsoleFx.Prompter.UpdateQuestionAction.Handle(ConsoleFx.Prompter.PrompterFlow,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:ConsoleFx.Prompter.DeleteQuestionAction.Handle(ConsoleFx.Prompter.PrompterFlow,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:ConsoleFx.Prompter.ValidationResult">
            <summary>
                Represents the result of a validation on a question's answer.
            </summary>
        </member>
        <member name="P:ConsoleFx.Prompter.ValidationResult.IsValid">
            <summary>
                Gets a value indicating whether the answer is valid.
            </summary>
        </member>
        <member name="P:ConsoleFx.Prompter.ValidationResult.ErrorMessage">
            <summary>
                Gets the error message describing the reason why the validation failed.
            </summary>
        </member>
    </members>
</doc>
