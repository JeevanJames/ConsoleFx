<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ConsoleFx.CmdLineParser</name>
    </assembly>
    <members>
        <member name="F:ConsoleFx.CmdLineParser.Config.OverrideBehavior.MergePreferSpecified">
            <summary>
                Merge unique values from config and specified. In case of conflict, ignore the config values.
            </summary>
        </member>
        <member name="F:ConsoleFx.CmdLineParser.Config.OverrideBehavior.MergePreferConfig">
            <summary>
                Merge unique values from config and specified. In case of conflict, ignore the specified values.
            </summary>
        </member>
        <member name="F:ConsoleFx.CmdLineParser.Config.OverrideBehavior.AlwaysSpecified">
            <summary>
                If available, use only specified values and ignore config values.
            </summary>
        </member>
        <member name="F:ConsoleFx.CmdLineParser.Config.OverrideBehavior.AlwaysConfig">
            <summary>
                If available, use only config values and ignore specified values.
            </summary>
        </member>
        <member name="T:ConsoleFx.CmdLineParser.Messages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.InvalidNumberOfArguments">
            <summary>
              Looks up a localized string similar to Invalid number of arguments specified.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.InvalidOptionParameterSpecifier">
            <summary>
              Looks up a localized string similar to Option &quot;{0}&quot; should be followed by a colon (:) to specify its parameters.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.InvalidOptionParametersSpecified">
            <summary>
              Looks up a localized string similar to Invalid parameter format for option &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.InvalidOptionSpecified">
            <summary>
              Looks up a localized string similar to Invalid option was specified: &quot;{0}&quot;.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.InvalidParametersSpecified">
            <summary>
              Looks up a localized string similar to Invalid parameters specified for option &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.OccurenceParameterValueNegative">
            <summary>
              Looks up a localized string similar to Occurence/parameter values cannot be negative.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.OptionAlreadyExists">
            <summary>
              Looks up a localized string similar to An option by the name &apos;{0}&apos; already exists.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.OptionsAfterParameters">
            <summary>
              Looks up a localized string similar to The options should be specified after the arguments.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.OptionsBeforeParameters">
            <summary>
              Looks up a localized string similar to The options should be specified before the arguments.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.RequiredArgumentsDefinedAfterOptional">
            <summary>
              Looks up a localized string similar to Cannot specify required arguments after optional ones.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.RequiredOptionAbsent">
            <summary>
              Looks up a localized string similar to The option &quot;{0}&quot; should be specified.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.RequiredParametersAbsent">
            <summary>
              Looks up a localized string similar to Required parameters absent for option &apos;{0}&apos;.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.TooFewOptions">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; option should be specified at least {1} times..
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Messages.TooManyOptions">
            <summary>
              Looks up a localized string similar to The &apos;{0}&apos; option cannot be specified more than {1} times..
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Parser.Grouping">
            <summary>
                Gets or sets how the args should be grouped.
                <para/>
                Note: This can be overridden by the parser style at runtime.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Parser.RootCommand">
            <summary>
                Gets the implicit <see cref="T:ConsoleFx.CmdLineArgs.Command" /> instance that is the root of all commands and args.
            </summary>
        </member>
        <member name="M:ConsoleFx.CmdLineParser.Parser.Parse(System.String[])">
            <summary>
                Parses the given set of tokens based on the rules specified by the <see cref="P:ConsoleFx.CmdLineParser.Parser.Arguments" />, <see cref="P:ConsoleFx.CmdLineParser.Parser.Options" />
                and <see cref="P:ConsoleFx.CmdLineParser.Parser.Commands" /> properties.
            </summary>
            <param name="tokens">Token strings to parse.</param>
            <returns>A <see cref="T:ConsoleFx.CmdLineParser.ParseResult" /> instance.</returns>
        </member>
        <member name="M:ConsoleFx.CmdLineParser.Parser.ResolveOptionParameterValues(ConsoleFx.CmdLineParser.Runs.OptionRun)">
            <summary>
                Resolves an <see cref="T:ConsoleFx.CmdLineArgs.Option" />'s value based on it's usage details. See the comments on the
                <see cref="P:ConsoleFx.CmdLineParser.Runs.OptionRun.ResolvedValue" /> property for details on how the resolution is done.
            </summary>
            <param name="optionRun">The <see cref="T:ConsoleFx.CmdLineParser.Runs.OptionRun" /> instance, whose option to resolve.</param>
            <returns>The value of the option.</returns>
        </member>
        <member name="M:ConsoleFx.CmdLineParser.Parser.ProcessArguments(System.Collections.Generic.IReadOnlyList{System.String},System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLineParser.Runs.ArgumentRun})">
            <summary>
                Process the specified arguments by verifying their usage, validating them and executing
                their handlers.
            </summary>
            <param name="specifiedArguments">The list of specified arguments.</param>
            <param name="argumentRuns">The argument run details.</param>
        </member>
        <member name="T:ConsoleFx.CmdLineParser.ParseResult">
            <summary>
                Represents the results of parsing a set of arguments.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.ParseResult.Arguments">
            <summary>
                Gets the list of specified command line arguments.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.ParseResult.Options">
            <summary>
                Gets the list of specified command line options.
            </summary>
        </member>
        <member name="M:ConsoleFx.CmdLineParser.ParseResult.OptionAs``1(System.String,``0)">
            <summary>
                Returns the typed value of the specified option.
            </summary>
            <typeparam name="T">The type of the value to return.</typeparam>
            <param name="name">Name of the specified option.</param>
            <param name="default">Default value to return if the option is not found.</param>
            <returns>The typed value of the specified option.</returns>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Runs.OptionRun.Command">
            <summary>
            Gets the <see cref="P:ConsoleFx.CmdLineParser.Runs.OptionRun.Command"/> instance to which this option belongs.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Runs.OptionRun.ResolvedValue">
            <summary>
                Gets or sets the final value of the parameters of the option. The actual type depends on how the option is setup.
                <para/>
                If the option allows parameters, then this can be:
                <list type="bullet">
                    <item>
                        <description>a <see cref="T:System.Collections.Generic.IList`1" />, if more than one parameters are allowed, or</description>
                    </item>
                    <item>
                        <description>an object of type T, if only one parameter is allowed.</description>
                    </item>
                </list>
                If the option does not allow parameters, then this can be:
                <list type="bullet">
                    <item>
                        <description>
                            an <see cref="T:System.Int32" /> which is the number of times the option is specified (if it allows more
                            than one occurence), or
                        </description>
                    </item>
                    <item>
                        <description>
                            a <see cref="T:System.Boolean" /> which is true if the option was specified otherwise false (if it allows
                            only one occurence).
                        </description>
                    </item>
                </list>
            </summary>
        </member>
        <member name="T:ConsoleFx.CmdLineParser.Runs.ParseRun">
            <summary>
                Represents the internal state of a single parse execution. This includes the commands, arguments and options that
                were specified.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Runs.ParseRun.Commands">
            <summary>
                Gets all specified commands.
                <para/>
                Note: We use a <see cref="T:System.Collections.Generic.List`1" /> instead of the <see cref="P:ConsoleFx.CmdLineParser.Runs.ParseRun.Commands"/> collection here, because we
                want to avoid the duplicate checks, as commands at different levels can have the same name.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Runs.ParseRun.Arguments">
            <summary>
                Gets all allowed arguments and their values.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Runs.ParseRun.Options">
            <summary>
                Gets all allowed options and details of which are specified.
            </summary>
        </member>
        <member name="P:ConsoleFx.CmdLineParser.Runs.ParseRun.Tokens">
            <summary>
                Gets or sets all the specified options and argument tokens after accounting for the commands.
            </summary>
        </member>
        <member name="T:ConsoleFx.CmdLineParser.Style.ParserStyle">
            <summary>
                Base class that validates the rules for argument grouping.
            </summary>
        </member>
        <member name="M:ConsoleFx.CmdLineParser.Style.ParserStyle.GetGrouping(ConsoleFx.CmdLineArgs.ArgGrouping,System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLineArgs.Option},System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLineArgs.Argument})">
            <summary>
                Allows the parser style to override the preferred grouping based on its rules for the specified options and
                arguments.
            </summary>
            <param name="specifiedGrouping">The preferred grouping.</param>
            <param name="options">The list of allowed options.</param>
            <param name="arguments">The list of allowed arguments.</param>
            <returns>The final grouping for the specified options and arguments.</returns>
        </member>
        <member name="M:ConsoleFx.CmdLineParser.Style.ParserStyle.ValidateDefinedOptions(System.Collections.Generic.IEnumerable{ConsoleFx.CmdLineArgs.Option})">
            <summary>
                <para>Validate that the defined options are compatible with the parser style.</para>
                <para>An exception should be thrown if any option is invalid.</para>
                <para>An example of an invalid option is a short name longer than one character for the UNIX style parser.</para>
            </summary>
            <param name="options">List of all the defined options.</param>
        </member>
        <member name="M:ConsoleFx.CmdLineParser.Style.ParserStyle.IdentifyTokens(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLineParser.Runs.OptionRun},ConsoleFx.CmdLineArgs.ArgGrouping)">
            <summary>
                <para>Identifies all provided tokens as arguments, options and option parameters.</para>
                <para>Option and argument validators are not checked in this phase. Only the arg grouping is checked.</para>
            </summary>
            <param name="tokens">All the specified tokens</param>
            <param name="options">All available options. If any of the tokens match, add its details to this parameter.</param>
            <param name="grouping">The expected arg grouping to validate.</param>
            <returns>A collection of all the identified arguments.</returns>
        </member>
        <member name="M:ConsoleFx.CmdLineParser.Style.UnixParserStyle.GetGrouping(ConsoleFx.CmdLineArgs.ArgGrouping,System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLineArgs.Option},System.Collections.Generic.IReadOnlyList{ConsoleFx.CmdLineArgs.Argument})">
            <inheritdoc/>
        </member>
        <member name="M:ConsoleFx.CmdLineParser.Style.WindowsParserStyle.VerifyCommandLineGrouping(ConsoleFx.CmdLineParser.Style.WindowsParserStyle.ArgumentType,ConsoleFx.CmdLineParser.Style.WindowsParserStyle.ArgumentType,ConsoleFx.CmdLineArgs.ArgGrouping)">
            <summary>
                This method is used by the code that validates the command-line grouping. It is
                called for every iteration of the arguments.
            </summary>
            <param name="previousType">The type of the previously-checked argument.</param>
            <param name="currentType">The type of the currently-checked argument.</param>
            <param name="grouping">The expected arg grouping.</param>
        </member>
    </members>
</doc>
